(()=>{"use strict";function e(e,t){const s=Math.trunc(e/t),a=e%t,i=[];switch(0===s?i.push("top"):s===t-1&&i.push("bottom"),0===a?i.push("left"):a===t-1&&i.push("right"),i.length){case 0:return"center";case 1:return i[0];default:return`${i[0]}-${i[1]}`}}class t{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const s=document.createElement("div");s.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),s.addEventListener("mouseenter",(e=>this.onCellEnter(e))),s.addEventListener("mouseleave",(e=>this.onCellLeave(e))),s.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(s)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),r.style.width=`${s.character.health}%`,i.appendChild(r),a.appendChild(i),e.appendChild(a)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}const s={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"};class a{#e;constructor(){this.#e=new Set,this[Symbol.iterator]=this.iterator}iterator(){let e=0;const t=[...this.#e];return{next:()=>e<t.length?{done:!1,value:t[e++]}:{done:!0}}}length(){return this.#e.size}add(e){this.#e.add(e)}delete(e){this.#e.delete(e)}includes(e){return this.#e.has(e)}getStrongest(){return[...this.#e].reduce(((e,t)=>e.attack>t.attack?e:t))}}function*i(e,t){let s=0,a=0;for(;;)s=Math.trunc(Math.random()*e.length),a=Math.trunc(Math.random()*t)+1,yield new e[s](a)}function r(e,t,s){const r=new a;for(let a=0;a<s;a++)r.add(i(e,t).next().value);return r}class l{constructor(e,t="generic"){if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error("it is forbidden to create instances of Character")}_initLevel(e){for(;this.level<e;)this.levelUp()}getTooltip(){return`🎖${this.level} ⚔${this.attack} 🛡${this.defence} ❤${this.health}`}damage(e){this.health-=e,this.health=Math.max(this.health,0)}levelUp(){if(this.health<=0)throw new Error("It is impossible to raise the level of a deceased character");this.attack=Math.max(this.attack,this.attack*(this.health+80)/100).toFixed(2),this.defence=Math.max(this.defence,this.defence*(this.health+80)/100).toFixed(2),this.health=Math.min(this.health+80,100),this.level+=1}}class n extends l{constructor(e){super(1,"bowman"),this.attack=25,this.defence=25,this.rangeMove=2,this.rangeAttack=2,this._initLevel(e)}}class h extends l{constructor(e){super(1,"swordsman"),this.attack=40,this.defence=10,this.rangeMove=4,this.rangeAttack=1,this._initLevel(e)}}class c extends l{constructor(e){super(1,"magician"),this.attack=10,this.defence=40,this.rangeMove=1,this.rangeAttack=4,this._initLevel(e)}}class o extends l{constructor(e){super(1,"vampire"),this.attack=25,this.defence=25,this.rangeMove=2,this.rangeAttack=2,this._initLevel(e)}}class d extends l{constructor(e){super(1,"undead"),this.attack=40,this.defence=10,this.rangeMove=4,this.rangeAttack=1,this._initLevel(e)}}class m extends l{constructor(e){super(1,"daemon"),this.attack=10,this.defence=40,this.rangeMove=1,this.rangeAttack=4,this._initLevel(e)}}class u{constructor(e,t){if(!(e instanceof l))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}const v={swordsman:h,bowman:n,magician:c,daemon:m,undead:d,vampire:o};class g{static from(e){const t=[];return[e.teamPlayer,e.teamAI].forEach(((s,a)=>{for(const i of s){const{...s}=i,r=e.positions.findIndex((e=>e.character===i));t.push({character:s,position:e.positions[r].position,teamName:0===a?"teamPlayer":"teamAI"})}})),{maxLevel:e.maxLevel,currentLevel:e.currentLevel,characterCount:e.characterCount,characters:t}}static onNewGameClick(){this.init()}static onSaveGameClick(){this.stateService.save(g.from(this))}static onLoadGameClick(){let e;try{e=this.stateService.load()}catch(e){return void t.showError(e.message)}this.maxLevel=e.maxLevel,this.currentLevel=e.currentLevel,this.characterCount=e.characterCount,this.teamPlayer=new a,this.teamAI=new a,this.positions=[],this.selectedCell=void 0,this.atimate=!1,this.gameOver=!1,e.characters.forEach((e=>{const t=new v[e.character.type](1);for(const s in e.character)Object.hasOwn(e.character,s)&&(t[s]=e.character[s]);this[e.teamName].add(t),this.positions.push(new u(t,e.position))})),this.gamePlay.drawUi(Object.keys(s)[this.currentLevel-1]),this.gamePlay.redrawPositions(this.positions)}}const C=new t;C.bindToDOM(document.querySelector("#game-container"));const p=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),L=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.addListeners()}init(){this.maxLevel=4,this.currentLevel=1,this.characterCount=2,this.teamPlayer=void 0,this.teamAI=void 0,this.positions=[],this.gamePlay.drawUi(Object.keys(s)[this.currentLevel-1]),this.makeCharacters(),this.gamePlay.redrawPositions(this.positions),this.selectedCell=void 0,this.atimate=!1,this.gameOver=!1}addListeners(){this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addNewGameListener(g.onNewGameClick.bind(this)),this.gamePlay.addSaveGameListener(g.onSaveGameClick.bind(this)),this.gamePlay.addLoadGameListener(g.onLoadGameClick.bind(this))}makeCharacters(){if(void 0!==this.teamPlayer){const e=r([n,h,c],this.currentLevel,this.characterCount-this.teamPlayer.length());for(const t of this.teamPlayer)e.add(t);this.teamPlayer=e}else this.teamPlayer=r([n,h,c],this.currentLevel,this.characterCount);let e,t,s;this.teamAI=r([o,d,m],this.currentLevel,this.characterCount),this.positions=[],[this.teamPlayer,this.teamAI].forEach(((a,i)=>{for(const r of a){do{t=Math.trunc(Math.random()*this.gamePlay.boardSize),s=Math.trunc(2*Math.random()),e=t*this.gamePlay.boardSize+(0===i?s:this.gamePlay.boardSize-s-1)}while(this.getCharacterByPosition(e));this.positions.push(new u(r,e))}}))}getCharacterByPosition(e){return this.positions.find((t=>t.position===e))}deleteCharacterByPosition(e){const t=this.getCharacterByPosition(e);if(t){this.teamPlayer.delete(t.character),this.teamAI.delete(t.character);const s=this.positions.findIndex((t=>t.position===e));-1!==s&&this.positions.splice(s,1)}}isDistanceAvailable(e,t){const{boardSize:s}=this.gamePlay,{character:a}=this.getCharacterByPosition(this.selectedCell),i=a[t],r=Math.abs(Math.trunc(this.selectedCell/s)-Math.trunc(e/s)),l=Math.abs(this.selectedCell%s-e%s);return Math.max(r,l)<=i}dealMove(e){const t=this.getCharacterByPosition(this.selectedCell);t.position=e,this.gamePlay.redrawPositions(this.positions),this.gamePlay.deselectCell(this.selectedCell),this.gamePlay.deselectCell(e),this.selectedCell=void 0,this.teamPlayer.includes(t.character)&&this.turnAI()}dealDamage(e){const t=this.getCharacterByPosition(this.selectedCell).character,s=this.getCharacterByPosition(e).character,a=Math.max(t.attack-s.defence,(.1*t.attack).toFixed(2));this.atimate=!0,this.gamePlay.showDamage(e,a).then((()=>{s.damage(a),s.health||this.deleteCharacterByPosition(e),this.gamePlay.redrawPositions(this.positions),this.gamePlay.deselectCell(this.selectedCell),this.gamePlay.deselectCell(e),this.selectedCell=void 0,this.atimate=!1,this.teamPlayer.includes(t)&&this.turnAI(),this.teamPlayer.length()?this.teamAI.length()||this.levelUp():this.gameOver=!0}))}levelUp(){if(this.currentLevel===this.maxLevel)this.gameOver=!0;else{this.currentLevel+=1,this.characterCount+=1;for(const e of this.teamPlayer)e.levelUp();this.gamePlay.drawUi(Object.keys(s)[this.currentLevel-1]),this.makeCharacters(),this.gamePlay.redrawPositions(this.positions),this.selectedCell=void 0}}turnAI(){if(!this.teamAI.length())return;const e=this.teamAI.getStrongest(),t=this.teamPlayer.getStrongest(),s=this.positions.find((t=>t.character===e)),a=this.positions.find((e=>e.character===t));if(this.selectedCell=s.position,this.isDistanceAvailable(a.position,"rangeAttack"))this.dealDamage(a.position);else{const e=this.calcFieldToMove(s,a);void 0!==e&&this.dealMove(e)}}calcFieldToMove(e,t){let s;const{boardSize:a}=this.gamePlay,i=Math.trunc(e.position/a),r=e.position%a,l=Math.trunc(t.position/a),n=t.position%a,h=Math.min(Math.abs(l-i),e.character.rangeMove),c=Math.min(Math.abs(n-r),e.character.rangeMove),o=Math.sign(l-i),d=Math.sign(n-r);for(let e=h;e>=0;e--)for(let t=c;t>=0;t--)if(s=(i+e*o)*a+(r+t*d),void 0===this.getCharacterByPosition(s))return s}onCellClick(e){if(this.gameOver||this.atimate)return;const s=this.getCharacterByPosition(e);s?this.teamAI.includes(s.character)?void 0!==this.selectedCell?this.isDistanceAvailable(e,"rangeAttack")?this.dealDamage(e):t.showMessage("too much distance"):t.showMessage("this is AI character"):this.selectedCell===e?(this.gamePlay.deselectCell(this.selectedCell),this.selectedCell=void 0):(void 0!==this.selectedCell&&this.gamePlay.deselectCell(this.selectedCell),this.selectedCell=e,this.gamePlay.selectCell(e)):void 0!==this.selectedCell?this.isDistanceAvailable(e,"rangeMove")?this.dealMove(e):t.showMessage("too much distance"):t.showMessage("this is empty field")}onCellEnter(e){if(this.gameOver||this.atimate)return;const t=this.getCharacterByPosition(e);t&&this.gamePlay.showCellTooltip(t.character.getTooltip(),e),void 0!==this.selectedCell?t?this.teamAI.includes(t.character)?this.isDistanceAvailable(e,"rangeAttack")?(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor("crosshair")):this.gamePlay.setCursor("not-allowed"):this.gamePlay.setCursor("pointer"):this.isDistanceAvailable(e,"rangeMove")?(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor("pointer")):this.gamePlay.setCursor("not-allowed"):this.gamePlay.setCursor("pointer")}onCellLeave(e){this.gameOver||this.atimate||(this.getCharacterByPosition(e)&&this.gamePlay.hideCellTooltip(e),this.selectedCell!==e&&this.gamePlay.deselectCell(e))}}(C,p);L.init()})();